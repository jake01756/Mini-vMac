name: build-36.04-lx64-p2

on:
  workflow_run:
    workflows: ["build-36.04-lx64-p1"]
    types:
      - completed

jobs:
  linux64:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        #model: [128K, 512Ke, Plus, SE, Classic, SEFDHD, II]
        model: [Plus, SE]
        hres: [512, 640, 640, 640, 704, 800, 832, 960, 960, 1024]
        vres: [384, 400, 480, 512, 450, 600, 525, 540, 600, 768]
        depth: [0,5]
        sound: [1]
        drives: [6]
        exclude:
          - model: 128k
            depth: 5
          - model: 512Ke
            depth: 5 
          - model: Plus
            depth: 5
          - model: SE
            depth: 5 
          - model: Classic
            depth: 5 
          - model: SEFDHD
            depth: 5 
          - model: II
            depth: 0
    steps:
      - name: checkout
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}
        uses: actions/checkout@v4
        with:
          ref: 36.04
      - name: Cache Build Tool
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}
        id: cache-build-linux-tool64
        uses: actions/cache@v3
        with:
          path: setup_t
          key: ${{ runner.os }}-setup_t-linux64
      - name: build setup tool
        if: (${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}) && steps.cache-build-linux-tool64.outputs.cache-hit != 'true'
        run: gcc setup/tool.c -o setup_t
      - name: configure dev options
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}
        run: |
            mkdir -p downloads
            echo "#define kMaintainerName \"Jake Thomas\"" > setup/CONFIGUR.i
            echo "#define kStrHomePage \"https://github.com/jake01756/Mini-vMac\"" >> setup/CONFIGUR.i
            echo "#define cur_ide gbk_ide_mgw" >> setup/CONFIGUR.i
      - name: Cache Build
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}
        uses: actions/cache@v3
        id: cache-build
        with:
          path: minivmac-36.04-*
          key: ${{ runner.os }}-build-cache-${{ matrix.model }}-${{ matrix.hres }}-${{ matrix.vres }}
      - name: build linux x64
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}  && steps.cache-build.outputs.cache-hit != 'true'
        run: |
            ./setup_t -t lx64 -n "minivmac-36.04-lx64-m${{ matrix.model }}-512x484" -m ${{ matrix.model }} -hres ${{ matrix.hres }} -vres ${{ matrix.vres }} -depth ${{ matrix.depth }} -sound ${{ matrix.sound }} -drives ${{ matrix.drives }} > setup.sh
            . setup.sh && make
            mv minivmac minivmac-36.04-lx64-${{ matrix.model }}-${{ matrix.hres }}x${{ matrix.vres }}
            #./setup_t -t lx64 -n "minivmac-36.04-lx64-m${{ matrix.model }}-${{ matrix.hres }}x${{ matrix.vres }}" -maintainer "Jake Thomas" -homepage "github.com/jake01756/Mini-vMac" -m ${{ matrix.model }} -depth ${{ matrix.depth }} -hres ${{ matrix.hres }} -vres ${{ matrix.vres }} -sound ${{ matrix.sound }} -drives ${{ matrix.drives }} > setup.sh
      - name: uploading
        if: ${{ matrix.hres == 512 && matrix.vres == 384 ||  matrix.hres == 640 && matrix.vres == 400 || matrix.hres == 640 && matrix.vres == 512 || matrix.hres == 704 && matrix.vres == 450 || matrix.hres == 800 && matrix.vres == 600 || matrix.hres == 832 && matrix.vres == 525 || matrix.hres == 960 && matrix.vres == 540 || matrix.hres == 960 && matrix.vres == 768 || matrix.hres == 1024 && matrix.vres == 600 }}
        uses: actions/upload-artifact@v3
        with: 
          name: linux64-builds
          path: minivmac-36.04-*

  release_linux:
    needs: [linux64]
    #needs: [linux64, linux86, linuxppc, linuxarm]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux 64 Builds
        uses: actions/download-artifact@v3
        with:
          name: linux64-builds
          path: builds/linux/
      #- name: Download Linux 86 Builds
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: linux86-builds
      #    path: builds/linux/
      # - name: Download Linux PPC Builds
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: linuxppc-builds
      #     path: builds/linux/
      # - name: Download Linux ARM Builds
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: linuxarm-builds
      #     path: builds/linux/
      - name: Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          name: "Latest 36.04 Linux Builds"
          body: "These are the Linux builds that were compiled during the last push or merge."
          prerelease: true
          draft: false
          tag_name: "latest-linux"
          token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            builds/linux/*
